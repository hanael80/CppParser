////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file	HyCppParserConsts.h
///
/// @brief	HyCppParserConsts 헤더 파일
///
/// @date	2012-7-1
////////////////////////////////////////////////////////////////////////////////////////////////////


#pragma once


#define array_                              " array "
#define array_size_                         " array_size "
#define array_variable_                     " array_variable "
#define begin_variable_declaration_body_    " begin_variable_declaration_body "
#define casting_type_                       " casting_type "
#define casting_value_                      " casting_value "
#define class_access_                       " class_access "
#define class_assign_                       " class_assign "
#define class_body_                         " class_body "
#define class_constructor_                  " class_constructor "
#define class_declaration_                  " class_declaration "
#define class_declaration_begin_            " class_declaration_begin "
#define class_destructor_                   " class_destructor "
#define class_inheritance_                  " class_inheritance "
#define class_keyword_                      " class_keyword "
#define class_member_access_                " class_member_access "
#define class_member_const_                 " class_member_const "
#define class_member_function_              " class_member_function "
#define class_member_function_tail_         " class_member_function_tail "
#define class_member_mutable_               " class_member_mutable "
#define class_member_pure_virtual_tail_     " class_member_pure_virtual_tail "
#define class_member_var_init_              " class_member_var_init "
#define class_member_var_init_list_         " class_member_var_init_list "
#define class_member_var_inits_             " class_member_var_inits "
#define class_member_variable_              " class_member_variable "
#define class_member_variable_use_bit_      " class_member_variable_use_bit "
#define class_member_virtual_               " class_member_virtual "
#define class_name_                         " class_name "
#define class_statement_                    " class_statement "
#define class_statements_                   " class_statements "
#define class_template_                     " class_template "
#define class_templates_                    " class_templates "
#define class_variable_declaration_body_    " class_variable_declaration_body "
#define condition_statement_                " condition_statement "
#define constructor_call_                   " constructor_call "
#define destructor_mark_                    " destructor_mark "
#define else_statement_                     " else_statement "
#define empty_class_declaration_begin_      " empty_class_declaration_begin "
#define end_variable_declaration_body_      " end_variable_declaration_body "
#define enum_declaration_                   " enum_declaration "
#define enum_element_                       " enum_element "
#define enum_element_assign_                " enum_element_assign "
#define enum_elements_                      " enum_elements "
#define enum_name_                          " enum_name "
#define enum_type_                          " enum_type "
#define evariable_name_                     " evariable_name "
#define exponent_                           " exponent "
#define exponent_float_symbol_              " exponent_float_symbol "
#define extern_                             " extern "
#define first_level_statement_              " first_level_statement "
#define first_level_statements_             " first_level_statements "
#define float_symbol_                       " float_symbol "
#define for_condition_statement_            " for_condition_statement "
#define fraction_                           " fraction "
#define fraction_number_                    " fraction_number "
#define friend_class_                       " friend_class "
#define friend_statement_                   " friend_statement "
#define function_attribute_                 " function_attribute "
#define function_attributes_                " function_attributes "
#define function_body_                      " function_body "
#define function_body_begin_                " function_body_begin "
#define function_body_end_                  " function_body_end "
#define function_call_parameter_            " function_call_parameter "
#define function_call_parameters_           " function_call_parameters "
#define function_call_parameters_begin_     " function_call_parameters_begin "
#define function_declaration_               " function_declaration "
#define function_name_                      " function_name "
#define function_parameter_                 " function_parameter "
#define function_parameter_array_           " function_parameter_array "
#define function_parameter_assign_          " function_parameter_assign "
#define function_parameter_assign_begin_    " function_parameter_assign_begin "
#define function_parameter_assign_end_      " function_parameter_assign_end "
#define function_parameter_flexible_        " function_parameter_flexible "
#define function_parameter_name_            " function_parameter_name "
#define function_parameters_                " function_parameters "
#define function_parameters_begin_          " function_parameters_begin "
#define function_parameters_end_            " function_parameters_end "
#define function_pointer_                   " function_pointer "
#define function_pointer_type_              " function_pointer_type "
#define function_static_                    " function_static "
#define integer_                            " integer "
#define initial_value_                      " initial_value "
#define last_enum_elements_comma_           " last_enum_elements_comma "
#define left_value_                         " left_value "
#define member_function_call_using_ptr_		" member_function_call_using_ptr "
#define name_                               " name "
#define namespace_                          " namespace "
#define namespace_area_                     " namespace_area "
#define namespace_name_                     " namespace_name "
#define next_class_member_var_init_         " next_class_member_var_init "
#define next_enum_element_                  " next_enum_element "
#define next_function_call_parameter_       " next_function_call_parameter "
#define next_function_parameter_            " next_function_parameter "
#define next_initial_value_                 " next_initial_value "
#define next_parent_class_                  " next_parent_class "
#define next_right_expression1_             " next_right_expression1 "
#define next_right_expression2_             " next_right_expression2 "
#define next_right_expression3_             " next_right_expression3 "
#define next_right_expression4_             " next_right_expression4 "
#define next_right_expression5_             " next_right_expression5 "
#define next_right_expression6_             " next_right_expression6 "
#define next_right_expression7_             " next_right_expression7 "
#define next_right_expression8_             " next_right_expression8 "
#define next_right_expression9_             " next_right_expression9 "
#define next_right_expression10_            " next_right_expression10 "
#define next_right_expression11_            " next_right_expression11 "
#define next_right_expression12_            " next_right_expression12 "
#define next_right_expression13_            " next_right_expression13 "
#define next_right_expression14_            " next_right_expression14 "
#define next_right_expression15_            " next_right_expression15 "
#define next_right_expression16_            " next_right_expression16 "
#define next_scope_name_                    " next_scope_name "
#define next_scope_type_                    " next_scope_type "
#define next_specified_value_               " next_specified_value "
#define next_statement_body_                " next_statement_body "
#define next_template_class_                " next_template_class "
#define next_template_class_name_           " next_template_class_name "
#define next_typedef_name_                  " next_typedef_name "
#define next_variable_                      " next_variable "
#define next_variable_attributes_           " next_variable_attributes "
#define operator_type_                      " operator_type "
#define parent_class_                       " parent_class "
#define parent_classes_                     " parent_classes "
#define return_expression_                  " return_expression "
#define return_type_                        " return_type "
#define right_expression_                   " right_expression "
#define right_expression1_                  " right_expression1 "
#define right_expression2_                  " right_expression2 "
#define right_expression3_                  " right_expression3 "
#define right_expression4_                  " right_expression4 "
#define right_expression5_                  " right_expression5 "
#define right_expression6_                  " right_expression6 "
#define right_expression7_                  " right_expression7 "
#define right_expression8_                  " right_expression8 "
#define right_expression9_                  " right_expression9 "
#define right_expression10_                 " right_expression10 "
#define right_expression11_                 " right_expression11 "
#define right_expression12_                 " right_expression12 "
#define right_expression13_                 " right_expression13 "
#define right_expression14_                 " right_expression14 "
#define right_expression15_                 " right_expression15 "
#define right_expression16_                 " right_expression16 "
#define right_expression17_                 " right_expression17 "
#define right_expression18_                 " right_expression18 "
#define right_value_                        " right_value "
#define root_scope_                         " root_symbol "
#define scope_name_						    " scope_name "
#define scope_type_						    " scope_type "
#define second_level_statement_             " second_level_statement "
#define source_                             " source "
#define specified_values_                   " specified_values "
#define statement_                          " statement "
#define statement_bodies_                   " statement_bodies "
#define statement_body_                     " statement_body "
#define statements_                         " statements "
#define switch_body_                        " switch_body "
#define target_call_                        " target_call "
#define template_                           " template "
#define template_class_                     " template_class "
#define template_class_names_               " template_class_names "
#define template_classes_                   " template_classes "
#define template_specification_             " template_specification "
#define template_specification_begin_       " template_specification_begin "
#define type_                               " type "
#define type_definition_                    " type_definition "
#define type_definition_body_               " type_definition_body "
#define typedef_                            " typedef "
#define typedef_names_                      " typedef_names "
#define typedef_scope_type_                 " typedef_scope_type "
#define unsignable_type_                    " unsignable_type "
#define using_                              " using "
#define using_alias_                        " using_alias "
#define variable_attribute_                 " variable_attribute "
#define variable_attributes_                " variable_attributes "
#define variable_attributes_begin_          " variable_attributes_begin "
#define variable_basic_type_                " variable_basic_type "
#define variable_declaration_               " variable_declaration "
#define variable_declaration_body_          " variable_declaration_body "
#define variable_name_                      " variable_name "
#define variable_pointer_const_             " variable_pointer_const "
#define variable_pointer_type_              " variable_pointer_type "
#define variable_pointers_                  " variable_pointers "
#define variable_reference_mark_            " variable_reference_mark "
#define variable_static_                    " variable_static "
#define variable_type_                      " variable_type "
#define variable_type_body_                 " variable_type_body "
#define variable_typename_                  " variable_typename "
#define variable_types_                     " variable_types "
#define word_                               " word "

// cpp11
#define auto_                      " auto "
#define decltype_                  " decltype "
#define decltype_expression_       " decltype_expression "
#define lambda_function_parameter_ " lambda_function_parameter "